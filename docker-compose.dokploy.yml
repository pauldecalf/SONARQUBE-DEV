version: '3.8'

services:
  sonarqube:
    image: sonarqube:10.3-community
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: ${POSTGRES_USER:-sonar}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD:-sonar}
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
      # Configuration pour VPS
      SONAR_WEB_HOST: 0.0.0.0
      SONAR_WEB_PORT: 9000
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "${SONAR_PORT:-9000}:9000"
    networks:
      - sonar-network
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/api/system/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 80s
    # Labels pour Dokploy
    labels:
      - "dokploy.enable=true"
      - "dokploy.http.routers.sonarqube.rule=Host(`168.231.87.2`)"
      - "dokploy.http.routers.sonarqube.tls=false"
      - "dokploy.http.services.sonarqube.loadbalancer.server.port=9000"

  db:
    image: postgres:15-alpine
    container_name: sonarqube-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sonar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sonar}
      POSTGRES_DB: ${POSTGRES_DB:-sonar}
      # Optimisations PostgreSQL pour SonarQube
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - sonar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sonar}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local
  postgresql_data:
    driver: local

networks:
  sonar-network:
    driver: bridge 